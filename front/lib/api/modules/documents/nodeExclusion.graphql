#import './fragments.graphql'

query getDiagnosesExclusions(
  $algorithmId: ID!
  $after: String
  $before: String
  $first: Int
  $last: Int
  $searchTerm: String
) {
  getDiagnosesExclusions(
    algorithmId: $algorithmId
    after: $after
    before: $before
    first: $first
    last: $last
    searchTerm: $searchTerm
  ) {
    pageInfo {
      hasNextPage
      hasPreviousPage
      endCursor
      startCursor
    }
    totalCount
    edges {
      node {
        id
        excludingNode {
          id
          labelTranslations {
            ...HstoreLanguages
          }
        }
        excludedNode {
          id
          labelTranslations {
            ...HstoreLanguages
          }
        }
      }
    }
  }
}

mutation createNodeExclusions($params: [NodeExclusionInput!]!) {
  createNodeExclusions(input: { params: $params }) {
    nodeExclusions {
      id
    }
  }
}

mutation destroyNodeExclusion(
  $id: ID
  $excludingNodeId: ID
  $excludedNodeId: ID
) {
  destroyNodeExclusion(
    input: {
      id: $id
      excludingNodeId: $excludingNodeId
      excludedNodeId: $excludedNodeId
    }
  ) {
    id
  }
}
