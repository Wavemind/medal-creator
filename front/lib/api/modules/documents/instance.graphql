#import './fragments.graphql'

query getInstances($nodeId: ID!, $algorithmId: ID) {
  getInstances(nodeId: $nodeId, algorithmId: $algorithmId) {
    ...InstanceFields
  }
}

mutation createInstance(
  $nodeId: ID!
  $instanceableId: ID!
  $instanceableType: DiagramEnum!
  $positionX: Float
  $positionY: Float
) {
  createInstance(
    input: {
      params: {
        nodeId: $nodeId
        instanceableId: $instanceableId
        instanceableType: $instanceableType
        positionX: $positionX
        positionY: $positionY
      }
    }
  ) {
    instance {
      id
    }
  }
}

query getComponents($instanceableId: ID!, $instanceableType: DiagramEnum!) {
  getComponents(
    instanceableId: $instanceableId
    instanceableType: $instanceableType
  ) {
    ...ComponentFields
  }
}

query getAvailableNodes(
  $instanceableId: ID!
  $instanceableType: DiagramEnum!
  $searchTerm: String
) {
  getAvailableNodes(
    instanceableId: $instanceableId
    instanceableType: $instanceableType
    searchTerm: $searchTerm
  ) {
    ...NodeFields
  }
}
