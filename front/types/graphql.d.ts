export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>
}
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>
}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any
  /** Represents untyped JSON */
  JSON: any
  Upload: any
}

/** Autogenerated input type of AcceptInvitation */
export type AcceptInvitationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: UserInput
}

/** Autogenerated return type of AcceptInvitation. */
export type AcceptInvitationPayload = {
  __typename?: 'AcceptInvitationPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  user?: Maybe<User>
}

export type AdministrationRoute = {
  __typename?: 'AdministrationRoute'
  category: Scalars['String']
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  nameTranslations: Hstore
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type Algorithm = {
  __typename?: 'Algorithm'
  ageLimit: Scalars['Int']
  ageLimitMessageTranslations: Hstore
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  decisionTrees: Array<DecisionTree>
  descriptionTranslations: Hstore
  formattedConsultationOrder?: Maybe<Scalars['JSON']>
  fullOrderJson?: Maybe<Scalars['JSON']>
  id: Scalars['ID']
  jobId?: Maybe<Scalars['String']>
  languages: Array<Language>
  medalDataConfigVariables: Array<MedalDataConfigVariable>
  medalRJson?: Maybe<Scalars['JSON']>
  medalRJsonVersion?: Maybe<Scalars['Int']>
  minimumAge: Scalars['Int']
  mode?: Maybe<Scalars['String']>
  name: Scalars['String']
  status: Scalars['String']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  usedVariables: Array<Scalars['Int']>
}

/** The connection type for Algorithm. */
export type AlgorithmConnection = {
  __typename?: 'AlgorithmConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<AlgorithmEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Algorithm>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type AlgorithmEdge = {
  __typename?: 'AlgorithmEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Algorithm
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type AlgorithmInput = {
  ageLimit?: InputMaybe<Scalars['Int']>
  ageLimitMessageTranslations?: InputMaybe<HstoreInput>
  descriptionTranslations?: InputMaybe<HstoreInput>
  fullOrderJson?: InputMaybe<Scalars['JSON']>
  id?: InputMaybe<Scalars['ID']>
  languageIds?: InputMaybe<Array<Scalars['ID']>>
  medalDataConfigVariablesAttributes?: InputMaybe<
    Array<MedalDataConfigVariableInput>
  >
  minimumAge?: InputMaybe<Scalars['Int']>
  mode?: InputMaybe<Scalars['String']>
  name: Scalars['String']
  projectId?: InputMaybe<Scalars['ID']>
  status?: InputMaybe<Scalars['String']>
}

export type Answer = {
  __typename?: 'Answer'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  isUnavailable: Scalars['Boolean']
  labelTranslations: Hstore
  operator?: Maybe<OperatorEnum>
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  value?: Maybe<Scalars['String']>
}

export type AnswerInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>
  id?: InputMaybe<Scalars['ID']>
  labelTranslations: HstoreInput
  operator?: InputMaybe<OperatorEnum>
  value?: InputMaybe<Scalars['String']>
}

export type AnswerType = {
  __typename?: 'AnswerType'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  display: Scalars['String']
  id: Scalars['ID']
  labelKey?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  value: Scalars['String']
}

export enum BreakableEnum {
  Four = 'four',
  One = 'one',
  Two = 'two',
}

export type Condition = {
  __typename?: 'Condition'
  answer: Answer
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  cutOffEnd?: Maybe<Scalars['Int']>
  cutOffStart?: Maybe<Scalars['Int']>
  id: Scalars['ID']
  instance: Instance
  score?: Maybe<Scalars['Int']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateAlgorithm */
export type CreateAlgorithmInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: AlgorithmInput
}

/** Autogenerated return type of CreateAlgorithm. */
export type CreateAlgorithmPayload = {
  __typename?: 'CreateAlgorithmPayload'
  algorithm?: Maybe<Algorithm>
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateDecisionTree */
export type CreateDecisionTreeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: DecisionTreeInput
}

/** Autogenerated return type of CreateDecisionTree. */
export type CreateDecisionTreePayload = {
  __typename?: 'CreateDecisionTreePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  decisionTree?: Maybe<DecisionTree>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateDiagnosis */
export type CreateDiagnosisInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  files?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: DiagnosisInput
}

/** Autogenerated return type of CreateDiagnosis. */
export type CreateDiagnosisPayload = {
  __typename?: 'CreateDiagnosisPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  diagnosis?: Maybe<Diagnosis>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateManagement */
export type CreateManagementInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  files?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: ManagementInput
}

/** Autogenerated return type of CreateManagement. */
export type CreateManagementPayload = {
  __typename?: 'CreateManagementPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  management?: Maybe<Management>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateProject */
export type CreateProjectInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: ProjectInput
  villages?: InputMaybe<Scalars['Upload']>
}

/** Autogenerated return type of CreateProject. */
export type CreateProjectPayload = {
  __typename?: 'CreateProjectPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  project: Project
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateQuestionsSequence */
export type CreateQuestionsSequenceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: QuestionsSequenceInput
}

/** Autogenerated return type of CreateQuestionsSequence. */
export type CreateQuestionsSequencePayload = {
  __typename?: 'CreateQuestionsSequencePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  questionsSequence?: Maybe<QuestionsSequence>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of CreateUser */
export type CreateUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: UserInput
}

/** Autogenerated return type of CreateUser. */
export type CreateUserPayload = {
  __typename?: 'CreateUserPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  user?: Maybe<User>
}

/** Autogenerated input type of CreateVariable */
export type CreateVariableInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  files?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: VariableInput
}

/** Autogenerated return type of CreateVariable. */
export type CreateVariablePayload = {
  __typename?: 'CreateVariablePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  variable?: Maybe<Variable>
}

export type DecisionTree = {
  __typename?: 'DecisionTree'
  algorithm: Algorithm
  components: Array<Instance>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  cutOffEnd?: Maybe<Scalars['Int']>
  cutOffStart?: Maybe<Scalars['Int']>
  cutOffValueType?: Maybe<Scalars['String']>
  diagnoses: Array<Diagnosis>
  id: Scalars['ID']
  labelTranslations: Hstore
  node: Variable
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** The connection type for DecisionTree. */
export type DecisionTreeConnection = {
  __typename?: 'DecisionTreeConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<DecisionTreeEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<DecisionTree>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type DecisionTreeEdge = {
  __typename?: 'DecisionTreeEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: DecisionTree
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type DecisionTreeInput = {
  algorithmId?: InputMaybe<Scalars['ID']>
  cutOffEnd?: InputMaybe<Scalars['Int']>
  cutOffStart?: InputMaybe<Scalars['Int']>
  cutOffValueType?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  labelTranslations: HstoreInput
  nodeId: Scalars['ID']
}

/** Autogenerated input type of DestroyAlgorithm */
export type DestroyAlgorithmInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyAlgorithm. */
export type DestroyAlgorithmPayload = {
  __typename?: 'DestroyAlgorithmPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DestroyDecisionTree */
export type DestroyDecisionTreeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyDecisionTree. */
export type DestroyDecisionTreePayload = {
  __typename?: 'DestroyDecisionTreePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DestroyDiagnosis */
export type DestroyDiagnosisInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyDiagnosis. */
export type DestroyDiagnosisPayload = {
  __typename?: 'DestroyDiagnosisPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DestroyManagement */
export type DestroyManagementInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyManagement. */
export type DestroyManagementPayload = {
  __typename?: 'DestroyManagementPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DestroyQuestionsSequence */
export type DestroyQuestionsSequenceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyQuestionsSequence. */
export type DestroyQuestionsSequencePayload = {
  __typename?: 'DestroyQuestionsSequencePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DestroyVariable */
export type DestroyVariableInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DestroyVariable. */
export type DestroyVariablePayload = {
  __typename?: 'DestroyVariablePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type Diagnosis = {
  __typename?: 'Diagnosis'
  components: Array<Instance>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  files: Array<File>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isDangerSign: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  labelTranslations: Hstore
  levelOfUrgency: Scalars['Int']
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** The connection type for Diagnosis. */
export type DiagnosisConnection = {
  __typename?: 'DiagnosisConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<DiagnosisEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Diagnosis>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type DiagnosisEdge = {
  __typename?: 'DiagnosisEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Diagnosis
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type DiagnosisInput = {
  decisionTreeId?: InputMaybe<Scalars['ID']>
  descriptionTranslations?: InputMaybe<HstoreInput>
  id?: InputMaybe<Scalars['ID']>
  isDangerSign?: InputMaybe<Scalars['Boolean']>
  isNeonat?: InputMaybe<Scalars['Boolean']>
  labelTranslations: HstoreInput
  levelOfUrgency?: InputMaybe<Scalars['Int']>
  projectId?: InputMaybe<Scalars['ID']>
}

/** Autogenerated input type of Disable2fa */
export type Disable2faInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: TwoFaInput
}

/** Autogenerated return type of Disable2fa. */
export type Disable2faPayload = {
  __typename?: 'Disable2faPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type Drug = {
  __typename?: 'Drug'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  files: Array<File>
  formulations: Array<Formulation>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isAntiMalarial: Scalars['Boolean']
  isAntibiotic: Scalars['Boolean']
  isDangerSign: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  labelTranslations: Hstore
  levelOfUrgency?: Maybe<Scalars['Int']>
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DuplicateDecisionTree */
export type DuplicateDecisionTreeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DuplicateDecisionTree. */
export type DuplicateDecisionTreePayload = {
  __typename?: 'DuplicateDecisionTreePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of DuplicateVariable */
export type DuplicateVariableInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of DuplicateVariable. */
export type DuplicateVariablePayload = {
  __typename?: 'DuplicateVariablePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id?: Maybe<Scalars['ID']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export enum EmergencyStatusEnum {
  Emergency = 'emergency',
  EmergencyIfNo = 'emergency_if_no',
  Referral = 'referral',
  Standard = 'standard',
}

/** Autogenerated input type of Enable2fa */
export type Enable2faInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: TwoFaInput
}

/** Autogenerated return type of Enable2fa. */
export type Enable2faPayload = {
  __typename?: 'Enable2faPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type File = {
  __typename?: 'File'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  extension: Scalars['String']
  id: Scalars['ID']
  name: Scalars['String']
  size: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  url: Scalars['String']
}

export type Formulation = {
  __typename?: 'Formulation'
  administrationRoute?: Maybe<AdministrationRoute>
  breakable?: Maybe<BreakableEnum>
  byAge?: Maybe<Scalars['Boolean']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  dispensingDescriptionTranslations?: Maybe<Hstore>
  doseForm?: Maybe<Scalars['Float']>
  dosesPerDay?: Maybe<Scalars['Int']>
  id: Scalars['ID']
  injectionInstructionsTranslations?: Maybe<Hstore>
  liquidConcentration?: Maybe<Scalars['Int']>
  maximalDose?: Maybe<Scalars['Float']>
  maximalDosePerKg?: Maybe<Scalars['Float']>
  medicationForm: MedicationFormEnum
  minimalDosePerKg?: Maybe<Scalars['Float']>
  uniqueDose?: Maybe<Scalars['Float']>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type Hstore = {
  __typename?: 'Hstore'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  en: Scalars['String']
  fr: Scalars['String']
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type HstoreInput = {
  en?: InputMaybe<Scalars['String']>
  fr?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
}

export type Instance = {
  __typename?: 'Instance'
  conditions: Array<Condition>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  diagnosisId?: Maybe<Scalars['Int']>
  diagramName?: Maybe<Scalars['String']>
  durationTranslations?: Maybe<Hstore>
  id: Scalars['ID']
  instanceableId: Scalars['Int']
  instanceableType: Scalars['String']
  isPreReferral?: Maybe<Scalars['Boolean']>
  positionX: Scalars['Int']
  positionY: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type Language = {
  __typename?: 'Language'
  code: Scalars['String']
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  name: Scalars['String']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of LockUser */
export type LockUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of LockUser. */
export type LockUserPayload = {
  __typename?: 'LockUserPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  user?: Maybe<User>
}

export type Management = {
  __typename?: 'Management'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  files: Array<File>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isDangerSign: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  labelTranslations: Hstore
  levelOfUrgency?: Maybe<Scalars['Int']>
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** The connection type for Management. */
export type ManagementConnection = {
  __typename?: 'ManagementConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<ManagementEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Management>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type ManagementEdge = {
  __typename?: 'ManagementEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Management
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type ManagementInput = {
  descriptionTranslations?: InputMaybe<HstoreInput>
  id?: InputMaybe<Scalars['ID']>
  isDangerSign?: InputMaybe<Scalars['Boolean']>
  isNeonat?: InputMaybe<Scalars['Boolean']>
  labelTranslations: HstoreInput
  levelOfUrgency?: InputMaybe<Scalars['Int']>
  projectId?: InputMaybe<Scalars['ID']>
}

export type MedalDataConfigVariable = {
  __typename?: 'MedalDataConfigVariable'
  algorithm: Algorithm
  apiKey: Scalars['String']
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  label: Scalars['String']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  variable: Variable
}

export type MedalDataConfigVariableInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>
  algorithmId?: InputMaybe<Scalars['ID']>
  apiKey: Scalars['String']
  id?: InputMaybe<Scalars['ID']>
  label: Scalars['String']
  variableId: Scalars['ID']
}

export enum MedicationFormEnum {
  Capsule = 'capsule',
  Cream = 'cream',
  DispersibleTablet = 'dispersible_tablet',
  Drops = 'drops',
  Gel = 'gel',
  Inhaler = 'inhaler',
  Lotion = 'lotion',
  Ointment = 'ointment',
  Patch = 'patch',
  Pessary = 'pessary',
  PowderForInjection = 'powder_for_injection',
  Solution = 'solution',
  Spray = 'spray',
  Suppository = 'suppository',
  Suspension = 'suspension',
  Syrup = 'syrup',
  Tablet = 'tablet',
}

export type Mutation = {
  __typename?: 'Mutation'
  acceptInvitation?: Maybe<AcceptInvitationPayload>
  createAlgorithm?: Maybe<CreateAlgorithmPayload>
  createDecisionTree: CreateDecisionTreePayload
  createDiagnosis?: Maybe<CreateDiagnosisPayload>
  createManagement?: Maybe<CreateManagementPayload>
  createProject: CreateProjectPayload
  createQuestionsSequence?: Maybe<CreateQuestionsSequencePayload>
  createUser?: Maybe<CreateUserPayload>
  createVariable?: Maybe<CreateVariablePayload>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  destroyAlgorithm?: Maybe<DestroyAlgorithmPayload>
  destroyDecisionTree?: Maybe<DestroyDecisionTreePayload>
  destroyDiagnosis?: Maybe<DestroyDiagnosisPayload>
  destroyManagement?: Maybe<DestroyManagementPayload>
  destroyQuestionsSequence?: Maybe<DestroyQuestionsSequencePayload>
  destroyVariable?: Maybe<DestroyVariablePayload>
  disable2fa?: Maybe<Disable2faPayload>
  duplicateDecisionTree?: Maybe<DuplicateDecisionTreePayload>
  duplicateVariable?: Maybe<DuplicateVariablePayload>
  enable2fa?: Maybe<Enable2faPayload>
  id: Scalars['ID']
  lockUser?: Maybe<LockUserPayload>
  unlockUser?: Maybe<UnlockUserPayload>
  unsubscribeFromProject?: Maybe<UnsubscribeFromProjectPayload>
  updateAlgorithm?: Maybe<UpdateAlgorithmPayload>
  updateDecisionTree?: Maybe<UpdateDecisionTreePayload>
  updateDiagnosis?: Maybe<UpdateDiagnosisPayload>
  updateManagement?: Maybe<UpdateManagementPayload>
  updateProject?: Maybe<UpdateProjectPayload>
  updateQuestionsSequence?: Maybe<UpdateQuestionsSequencePayload>
  updateUser?: Maybe<UpdateUserPayload>
  updateVariable?: Maybe<UpdateVariablePayload>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type MutationAcceptInvitationArgs = {
  input: AcceptInvitationInput
}

export type MutationCreateAlgorithmArgs = {
  input: CreateAlgorithmInput
}

export type MutationCreateDecisionTreeArgs = {
  input: CreateDecisionTreeInput
}

export type MutationCreateDiagnosisArgs = {
  input: CreateDiagnosisInput
}

export type MutationCreateManagementArgs = {
  input: CreateManagementInput
}

export type MutationCreateProjectArgs = {
  input: CreateProjectInput
}

export type MutationCreateQuestionsSequenceArgs = {
  input: CreateQuestionsSequenceInput
}

export type MutationCreateUserArgs = {
  input: CreateUserInput
}

export type MutationCreateVariableArgs = {
  input: CreateVariableInput
}

export type MutationDestroyAlgorithmArgs = {
  input: DestroyAlgorithmInput
}

export type MutationDestroyDecisionTreeArgs = {
  input: DestroyDecisionTreeInput
}

export type MutationDestroyDiagnosisArgs = {
  input: DestroyDiagnosisInput
}

export type MutationDestroyManagementArgs = {
  input: DestroyManagementInput
}

export type MutationDestroyQuestionsSequenceArgs = {
  input: DestroyQuestionsSequenceInput
}

export type MutationDestroyVariableArgs = {
  input: DestroyVariableInput
}

export type MutationDisable2faArgs = {
  input: Disable2faInput
}

export type MutationDuplicateDecisionTreeArgs = {
  input: DuplicateDecisionTreeInput
}

export type MutationDuplicateVariableArgs = {
  input: DuplicateVariableInput
}

export type MutationEnable2faArgs = {
  input: Enable2faInput
}

export type MutationLockUserArgs = {
  input: LockUserInput
}

export type MutationUnlockUserArgs = {
  input: UnlockUserInput
}

export type MutationUnsubscribeFromProjectArgs = {
  input: UnsubscribeFromProjectInput
}

export type MutationUpdateAlgorithmArgs = {
  input: UpdateAlgorithmInput
}

export type MutationUpdateDecisionTreeArgs = {
  input: UpdateDecisionTreeInput
}

export type MutationUpdateDiagnosisArgs = {
  input: UpdateDiagnosisInput
}

export type MutationUpdateManagementArgs = {
  input: UpdateManagementInput
}

export type MutationUpdateProjectArgs = {
  input: UpdateProjectInput
}

export type MutationUpdateQuestionsSequenceArgs = {
  input: UpdateQuestionsSequenceInput
}

export type MutationUpdateUserArgs = {
  input: UpdateUserInput
}

export type MutationUpdateVariableArgs = {
  input: UpdateVariableInput
}

export type Node = {
  __typename?: 'Node'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  descriptionTranslations?: Maybe<Hstore>
  files: Array<File>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isDangerSign: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  labelTranslations: Hstore
  reference: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type NodeComplaintCategory = {
  __typename?: 'NodeComplaintCategory'
  complaintCategory: Variable
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  nodeId: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** The connection type for Node. */
export type NodeConnection = {
  __typename?: 'NodeConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<NodeEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Node>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type NodeEdge = {
  __typename?: 'NodeEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Node
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export enum OperatorEnum {
  Between = 'between',
  Less = 'less',
  MoreOrEqual = 'more_or_equal',
}

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo'
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']>
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']>
}

export type Project = {
  __typename?: 'Project'
  algorithms: Array<Algorithm>
  algorithmsCount?: Maybe<Scalars['Int']>
  consentManagement: Scalars['Boolean']
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  description?: Maybe<Scalars['String']>
  drugs: Array<Drug>
  drugsCount?: Maybe<Scalars['Int']>
  emergencyContentTranslations?: Maybe<Hstore>
  emergencyContentVersion?: Maybe<Scalars['Int']>
  id: Scalars['ID']
  isCurrentUserAdmin?: Maybe<Scalars['Boolean']>
  language: Language
  managements: Array<Management>
  managementsCount?: Maybe<Scalars['Int']>
  medalRConfig?: Maybe<Scalars['JSON']>
  name: Scalars['String']
  questionsSequences: Array<QuestionsSequence>
  questionsSequencesCount?: Maybe<Scalars['Int']>
  studyDescriptionTranslations?: Maybe<Hstore>
  trackReferral: Scalars['Boolean']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  userProjects: Array<UserProject>
  variables: Array<Variable>
  variablesCount?: Maybe<Scalars['Int']>
  villageJson?: Maybe<Scalars['JSON']>
}

/** The connection type for Project. */
export type ProjectConnection = {
  __typename?: 'ProjectConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<ProjectEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Project>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type ProjectEdge = {
  __typename?: 'ProjectEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Project
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type ProjectInput = {
  consentManagement?: InputMaybe<Scalars['Boolean']>
  description?: InputMaybe<Scalars['String']>
  emergencyContentTranslations?: InputMaybe<HstoreInput>
  emergencyContentVersion?: InputMaybe<Scalars['Int']>
  id?: InputMaybe<Scalars['ID']>
  languageId: Scalars['ID']
  name: Scalars['String']
  studyDescriptionTranslations?: InputMaybe<HstoreInput>
  trackReferral?: InputMaybe<Scalars['Boolean']>
  userProjectsAttributes: Array<UserProjectInput>
}

export type Query = {
  __typename?: 'Query'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  getAlgorithm: Algorithm
  getAlgorithms: AlgorithmConnection
  getAnswerTypes: Array<AnswerType>
  getComplaintCategories: NodeConnection
  getDecisionTree: DecisionTree
  getDecisionTrees: DecisionTreeConnection
  getDiagnoses: DiagnosisConnection
  getDiagnosis: Diagnosis
  getInstances: Array<Instance>
  getLanguages: Array<Language>
  getLastUpdatedDecisionTrees: DecisionTreeConnection
  getManagement?: Maybe<Management>
  getManagements: ManagementConnection
  getOtpRequiredForLogin: User
  getProject: Project
  getProjects: ProjectConnection
  getQrCodeUri: User
  getQuestionsSequence?: Maybe<QuestionsSequence>
  getQuestionsSequences: QuestionsSequenceConnection
  getUser: User
  getUsers: UserConnection
  getVariable: Variable
  getVariables: VariableConnection
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type QueryGetAlgorithmArgs = {
  id: Scalars['ID']
}

export type QueryGetAlgorithmsArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetComplaintCategoriesArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
}

export type QueryGetDecisionTreeArgs = {
  id: Scalars['ID']
}

export type QueryGetDecisionTreesArgs = {
  after?: InputMaybe<Scalars['String']>
  algorithmId: Scalars['ID']
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetDiagnosesArgs = {
  after?: InputMaybe<Scalars['String']>
  algorithmId: Scalars['ID']
  before?: InputMaybe<Scalars['String']>
  decisionTreeId?: InputMaybe<Scalars['ID']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetDiagnosisArgs = {
  id: Scalars['ID']
}

export type QueryGetInstancesArgs = {
  algorithmId?: InputMaybe<Scalars['ID']>
  nodeId: Scalars['ID']
}

export type QueryGetLastUpdatedDecisionTreesArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
}

export type QueryGetManagementArgs = {
  id: Scalars['ID']
}

export type QueryGetManagementsArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetOtpRequiredForLoginArgs = {
  userId: Scalars['ID']
}

export type QueryGetProjectArgs = {
  id: Scalars['ID']
}

export type QueryGetProjectsArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetQrCodeUriArgs = {
  userId: Scalars['ID']
}

export type QueryGetQuestionsSequenceArgs = {
  id: Scalars['ID']
}

export type QueryGetQuestionsSequencesArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetUserArgs = {
  id: Scalars['ID']
}

export type QueryGetUsersArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId?: InputMaybe<Scalars['ID']>
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QueryGetVariableArgs = {
  id: Scalars['ID']
}

export type QueryGetVariablesArgs = {
  after?: InputMaybe<Scalars['String']>
  before?: InputMaybe<Scalars['String']>
  first?: InputMaybe<Scalars['Int']>
  last?: InputMaybe<Scalars['Int']>
  projectId: Scalars['ID']
  searchTerm?: InputMaybe<Scalars['String']>
}

export type QuestionsSequence = {
  __typename?: 'QuestionsSequence'
  answers: Array<Answer>
  components: Array<Instance>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  cutOffEnd?: Maybe<Scalars['Int']>
  cutOffStart?: Maybe<Scalars['Int']>
  descriptionTranslations?: Maybe<Hstore>
  files: Array<File>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isDangerSign: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  labelTranslations: Hstore
  minScore?: Maybe<Scalars['Int']>
  reference: Scalars['Int']
  type: Scalars['String']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** The connection type for QuestionsSequence. */
export type QuestionsSequenceConnection = {
  __typename?: 'QuestionsSequenceConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<QuestionsSequenceEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<QuestionsSequence>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type QuestionsSequenceEdge = {
  __typename?: 'QuestionsSequenceEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: QuestionsSequence
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type QuestionsSequenceInput = {
  cutOffEnd?: InputMaybe<Scalars['Int']>
  cutOffStart?: InputMaybe<Scalars['Int']>
  descriptionTranslations?: InputMaybe<HstoreInput>
  id?: InputMaybe<Scalars['ID']>
  isDangerSign?: InputMaybe<Scalars['Boolean']>
  isNeonat?: InputMaybe<Scalars['Boolean']>
  labelTranslations: HstoreInput
  minScore?: InputMaybe<Scalars['Int']>
  projectId?: InputMaybe<Scalars['ID']>
  type: Scalars['String']
}

export enum RoleEnum {
  Admin = 'admin',
  Clinician = 'clinician',
  DeploymentManager = 'deployment_manager',
}

export enum RoundEnum {
  Half = 'half',
  Tenth = 'tenth',
  Unit = 'unit',
}

export enum SystemEnum {
  ChronicConditions = 'chronic_conditions',
  Comorbidities = 'comorbidities',
  ComplementaryMedicalHistory = 'complementary_medical_history',
  Dehydration = 'dehydration',
  Digestive = 'digestive',
  EarNoseMouthThroat = 'ear_nose_mouth_throat',
  Exposures = 'exposures',
  Feeding = 'feeding',
  Fever = 'fever',
  FollowUpQuestions = 'follow_up_questions',
  General = 'general',
  Integumentary = 'integumentary',
  MalnutritionAnemia = 'malnutrition_anemia',
  MuscularSkeletal = 'muscular_skeletal',
  Nervous = 'nervous',
  Prevention = 'prevention',
  PrioritySign = 'priority_sign',
  RespiratoryCirculation = 'respiratory_circulation',
  UrinaryReproductive = 'urinary_reproductive',
  Visual = 'visual',
  VitalSign = 'vital_sign',
}

export type TwoFaInput = {
  code?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  password?: InputMaybe<Scalars['String']>
  userId?: InputMaybe<Scalars['ID']>
}

/** Autogenerated input type of UnlockUser */
export type UnlockUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of UnlockUser. */
export type UnlockUserPayload = {
  __typename?: 'UnlockUserPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  user?: Maybe<User>
}

/** Autogenerated input type of UnsubscribeFromProject */
export type UnsubscribeFromProjectInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id: Scalars['ID']
}

/** Autogenerated return type of UnsubscribeFromProject. */
export type UnsubscribeFromProjectPayload = {
  __typename?: 'UnsubscribeFromProjectPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  project?: Maybe<Project>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateAlgorithm */
export type UpdateAlgorithmInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: AlgorithmInput
}

/** Autogenerated return type of UpdateAlgorithm. */
export type UpdateAlgorithmPayload = {
  __typename?: 'UpdateAlgorithmPayload'
  algorithm?: Maybe<Algorithm>
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateDecisionTree */
export type UpdateDecisionTreeInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: DecisionTreeInput
}

/** Autogenerated return type of UpdateDecisionTree. */
export type UpdateDecisionTreePayload = {
  __typename?: 'UpdateDecisionTreePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  decisionTree?: Maybe<DecisionTree>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateDiagnosis */
export type UpdateDiagnosisInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  existingFilesToRemove?: InputMaybe<Array<Scalars['Int']>>
  filesToAdd?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: DiagnosisInput
}

/** Autogenerated return type of UpdateDiagnosis. */
export type UpdateDiagnosisPayload = {
  __typename?: 'UpdateDiagnosisPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  diagnosis?: Maybe<Diagnosis>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateManagement */
export type UpdateManagementInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  existingFilesToRemove?: InputMaybe<Array<Scalars['Int']>>
  filesToAdd?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: ManagementInput
}

/** Autogenerated return type of UpdateManagement. */
export type UpdateManagementPayload = {
  __typename?: 'UpdateManagementPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  management?: Maybe<Management>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateProject */
export type UpdateProjectInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: ProjectInput
  villages?: InputMaybe<Scalars['Upload']>
}

/** Autogenerated return type of UpdateProject. */
export type UpdateProjectPayload = {
  __typename?: 'UpdateProjectPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  project?: Maybe<Project>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateQuestionsSequence */
export type UpdateQuestionsSequenceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: QuestionsSequenceInput
}

/** Autogenerated return type of UpdateQuestionsSequence. */
export type UpdateQuestionsSequencePayload = {
  __typename?: 'UpdateQuestionsSequencePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  questionsSequence?: Maybe<QuestionsSequence>
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** Autogenerated input type of UpdateUser */
export type UpdateUserInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  params: UserInput
}

/** Autogenerated return type of UpdateUser. */
export type UpdateUserPayload = {
  __typename?: 'UpdateUserPayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  user?: Maybe<User>
}

/** Autogenerated input type of UpdateVariable */
export type UpdateVariableInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']>
  existingFilesToRemove?: InputMaybe<Array<Scalars['Int']>>
  filesToAdd?: InputMaybe<Array<Scalars['Upload']>>
  id?: InputMaybe<Scalars['ID']>
  params: VariableInput
}

/** Autogenerated return type of UpdateVariable. */
export type UpdateVariablePayload = {
  __typename?: 'UpdateVariablePayload'
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  variable?: Maybe<Variable>
}

export type User = {
  __typename?: 'User'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  email: Scalars['String']
  firstName: Scalars['String']
  id: Scalars['ID']
  lastName: Scalars['String']
  lockedAt?: Maybe<Scalars['String']>
  otpProvisioningUri?: Maybe<Scalars['String']>
  otpRequiredForLogin?: Maybe<Scalars['Boolean']>
  otpSecret?: Maybe<Scalars['String']>
  password?: Maybe<Scalars['String']>
  passwordConfirmation?: Maybe<Scalars['String']>
  role: RoleEnum
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  userProjects: Array<UserProject>
}

/** The connection type for User. */
export type UserConnection = {
  __typename?: 'UserConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<UserEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<User>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type UserEdge = {
  __typename?: 'UserEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: User
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type UserInput = {
  email?: InputMaybe<Scalars['String']>
  firstName?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  invitationToken?: InputMaybe<Scalars['String']>
  lastName?: InputMaybe<Scalars['String']>
  password?: InputMaybe<Scalars['String']>
  passwordConfirmation?: InputMaybe<Scalars['String']>
  role?: InputMaybe<RoleEnum>
  userProjectsAttributes?: InputMaybe<Array<UserProjectInput>>
}

export type UserProject = {
  __typename?: 'UserProject'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  id: Scalars['ID']
  isAdmin: Scalars['Boolean']
  project?: Maybe<Project>
  projectId: Scalars['ID']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
  userId: Scalars['ID']
}

export type UserProjectInput = {
  _destroy?: InputMaybe<Scalars['Boolean']>
  id?: InputMaybe<Scalars['ID']>
  isAdmin?: InputMaybe<Scalars['Boolean']>
  projectId?: InputMaybe<Scalars['ID']>
  userId?: InputMaybe<Scalars['ID']>
}

export type Variable = {
  __typename?: 'Variable'
  answerType: AnswerType
  answers: Array<Answer>
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  dependenciesByAlgorithm?: Maybe<Scalars['JSON']>
  descriptionTranslations?: Maybe<Hstore>
  emergencyStatus?: Maybe<EmergencyStatusEnum>
  files: Array<File>
  formula?: Maybe<Scalars['String']>
  hasInstances?: Maybe<Scalars['Boolean']>
  id: Scalars['ID']
  instances: Array<Instance>
  isDangerSign: Scalars['Boolean']
  isDefault: Scalars['Boolean']
  isEstimable: Scalars['Boolean']
  isIdentifiable: Scalars['Boolean']
  isMandatory: Scalars['Boolean']
  isNeonat: Scalars['Boolean']
  isPreFill: Scalars['Boolean']
  isReferral: Scalars['Boolean']
  isUnavailable: Scalars['Boolean']
  labelTranslations: Hstore
  maxMessageErrorTranslations?: Maybe<Hstore>
  maxMessageWarningTranslations?: Maybe<Hstore>
  maxValueError?: Maybe<Scalars['Int']>
  maxValueWarning?: Maybe<Scalars['Int']>
  minMessageErrorTranslations?: Maybe<Hstore>
  minMessageWarningTranslations?: Maybe<Hstore>
  minValueError?: Maybe<Scalars['Int']>
  minValueWarning?: Maybe<Scalars['Int']>
  nodeComplaintCategories?: Maybe<Array<NodeComplaintCategory>>
  placeholderTranslations?: Maybe<Hstore>
  reference: Scalars['Int']
  referenceTableFemaleName?: Maybe<Scalars['String']>
  referenceTableMaleName?: Maybe<Scalars['String']>
  round?: Maybe<RoundEnum>
  stage?: Maybe<Scalars['String']>
  step?: Maybe<Scalars['String']>
  system?: Maybe<SystemEnum>
  type: VariableCategoryEnum
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export enum VariableCategoryEnum {
  AnswerableBasicMeasurement = 'AnswerableBasicMeasurement',
  AssessmentTest = 'AssessmentTest',
  BackgroundCalculation = 'BackgroundCalculation',
  BasicDemographic = 'BasicDemographic',
  BasicMeasurement = 'BasicMeasurement',
  ChronicCondition = 'ChronicCondition',
  ComplaintCategory = 'ComplaintCategory',
  Demographic = 'Demographic',
  Exposure = 'Exposure',
  ObservedPhysicalSign = 'ObservedPhysicalSign',
  PhysicalExam = 'PhysicalExam',
  Referral = 'Referral',
  Symptom = 'Symptom',
  TreatmentQuestion = 'TreatmentQuestion',
  UniqueTriageQuestion = 'UniqueTriageQuestion',
  Vaccine = 'Vaccine',
  VitalSignAnthropometric = 'VitalSignAnthropometric',
}

/** The connection type for Variable. */
export type VariableConnection = {
  __typename?: 'VariableConnection'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A list of edges. */
  edges: Array<VariableEdge>
  id: Scalars['ID']
  /** A list of nodes. */
  nodes: Array<Variable>
  /** Information to aid in pagination. */
  pageInfo: PageInfo
  totalCount: Scalars['Int']
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

/** An edge in a connection. */
export type VariableEdge = {
  __typename?: 'VariableEdge'
  createdAt?: Maybe<Scalars['ISO8601DateTime']>
  /** A cursor for use in pagination. */
  cursor: Scalars['String']
  id: Scalars['ID']
  /** The item at the end of the edge. */
  node: Variable
  updatedAt?: Maybe<Scalars['ISO8601DateTime']>
}

export type VariableInput = {
  answerTypeId: Scalars['ID']
  answersAttributes: Array<AnswerInput>
  complaintCategoryIds?: InputMaybe<Array<Scalars['ID']>>
  descriptionTranslations?: InputMaybe<HstoreInput>
  emergencyStatus?: InputMaybe<EmergencyStatusEnum>
  formula?: InputMaybe<Scalars['String']>
  id?: InputMaybe<Scalars['ID']>
  isDangerSign?: InputMaybe<Scalars['Boolean']>
  isEstimable?: InputMaybe<Scalars['Boolean']>
  isIdentifiable?: InputMaybe<Scalars['Boolean']>
  isMandatory?: InputMaybe<Scalars['Boolean']>
  isNeonat?: InputMaybe<Scalars['Boolean']>
  isPreFill?: InputMaybe<Scalars['Boolean']>
  isUnavailable?: InputMaybe<Scalars['Boolean']>
  labelTranslations: HstoreInput
  maxMessageErrorTranslations?: InputMaybe<HstoreInput>
  maxMessageWarningTranslations?: InputMaybe<HstoreInput>
  maxValueError?: InputMaybe<Scalars['Int']>
  maxValueWarning?: InputMaybe<Scalars['Int']>
  minMessageErrorTranslations?: InputMaybe<HstoreInput>
  minMessageWarningTranslations?: InputMaybe<HstoreInput>
  minValueError?: InputMaybe<Scalars['Int']>
  minValueWarning?: InputMaybe<Scalars['Int']>
  placeholderTranslations?: InputMaybe<HstoreInput>
  projectId?: InputMaybe<Scalars['ID']>
  round?: InputMaybe<RoundEnum>
  system?: InputMaybe<SystemEnum>
  type: VariableCategoryEnum
}
