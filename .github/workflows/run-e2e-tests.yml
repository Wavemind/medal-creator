name: End-to-end tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Start docker containers
        env:
          ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}
          ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}
          ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}
        run: |
          docker-compose up --build --detach
          sleep 10  # wait for database to be ready
          docker-compose run web bash -c "RAILS_ENV=test rails db:create db:migrate db:seed"

      - name: Run backend unit and integration tests
        run: |
          docker-compose run web rspec -f j -o tmp/rspec_results.json -f p
          docker-compose run web cat tmp/rspec_results.json > rspec_results.json
          tail -n +3 rspec_results.json > rspec_output.json

      - name: RSpec Report
        uses: SonicGarden/rspec-report-action@v2
        with:
          token: ${{ github.token }}
          json-path: rspec_output.json
        if: always()

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Playwright run
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        working-directory: front
        run: |
          npm install
          npm ci
          npm run build # Build your Next.js app
          npm run start & # Start your Next.js app in the background
          npx playwright test # Run your Playwright tests

      - name: "Report"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
